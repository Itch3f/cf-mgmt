// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/pivotalservices/cf-mgmt/securitygroup (interfaces: Manager)

// Package mock_securitygroup is a generated GoMock package.
package mock_securitygroup

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockManager is a mock of Manager interface
type MockManager struct {
	ctrl     *gomock.Controller
	recorder *MockManagerMockRecorder
}

// MockManagerMockRecorder is the mock recorder for MockManager
type MockManagerMockRecorder struct {
	mock *MockManager
}

// NewMockManager creates a new mock instance
func NewMockManager(ctrl *gomock.Controller) *MockManager {
	mock := &MockManager{ctrl: ctrl}
	mock.recorder = &MockManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockManager) EXPECT() *MockManagerMockRecorder {
	return m.recorder
}

// CreateApplicationSecurityGroups mocks base method
func (m *MockManager) CreateApplicationSecurityGroups() error {
	ret := m.ctrl.Call(m, "CreateApplicationSecurityGroups")
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateApplicationSecurityGroups indicates an expected call of CreateApplicationSecurityGroups
func (mr *MockManagerMockRecorder) CreateApplicationSecurityGroups() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateApplicationSecurityGroups", reflect.TypeOf((*MockManager)(nil).CreateApplicationSecurityGroups))
}
