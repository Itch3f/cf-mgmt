// Automatically generated by MockGen. DO NOT EDIT!
// Source: manager.go

package isosegment

import (
	gomock "github.com/golang/mock/gomock"
)

// Mock of manager interface
type Mockmanager struct {
	ctrl     *gomock.Controller
	recorder *_MockmanagerRecorder
}

// Recorder for Mockmanager (not exported)
type _MockmanagerRecorder struct {
	mock *Mockmanager
}

func NewMockmanager(ctrl *gomock.Controller) *Mockmanager {
	mock := &Mockmanager{ctrl: ctrl}
	mock.recorder = &_MockmanagerRecorder{mock}
	return mock
}

func (_m *Mockmanager) EXPECT() *_MockmanagerRecorder {
	return _m.recorder
}

func (_m *Mockmanager) GetIsolationSegments() ([]Segment, error) {
	ret := _m.ctrl.Call(_m, "GetIsolationSegments")
	ret0, _ := ret[0].([]Segment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockmanagerRecorder) GetIsolationSegments() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetIsolationSegments")
}

func (_m *Mockmanager) EntitledIsolationSegments(org string) ([]Segment, error) {
	ret := _m.ctrl.Call(_m, "EntitledIsolationSegments", org)
	ret0, _ := ret[0].([]Segment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockmanagerRecorder) EntitledIsolationSegments(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "EntitledIsolationSegments", arg0)
}

func (_m *Mockmanager) CreateIsolationSegment(name string) error {
	ret := _m.ctrl.Call(_m, "CreateIsolationSegment", name)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockmanagerRecorder) CreateIsolationSegment(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "CreateIsolationSegment", arg0)
}

func (_m *Mockmanager) DeleteIsolationSegment(segmentName string) error {
	ret := _m.ctrl.Call(_m, "DeleteIsolationSegment", segmentName)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockmanagerRecorder) DeleteIsolationSegment(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteIsolationSegment", arg0)
}

func (_m *Mockmanager) EnableOrgIsolation(orgName string, segmentName string) error {
	ret := _m.ctrl.Call(_m, "EnableOrgIsolation", orgName, segmentName)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockmanagerRecorder) EnableOrgIsolation(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "EnableOrgIsolation", arg0, arg1)
}

func (_m *Mockmanager) RevokeOrgIsolation(orgName string, segmentName string) error {
	ret := _m.ctrl.Call(_m, "RevokeOrgIsolation", orgName, segmentName)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockmanagerRecorder) RevokeOrgIsolation(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "RevokeOrgIsolation", arg0, arg1)
}

func (_m *Mockmanager) SetOrgIsolationSegment(orgName string, s Segment) error {
	ret := _m.ctrl.Call(_m, "SetOrgIsolationSegment", orgName, s)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockmanagerRecorder) SetOrgIsolationSegment(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetOrgIsolationSegment", arg0, arg1)
}

func (_m *Mockmanager) SetSpaceIsolationSegment(orgName string, spaceName string, s Segment) error {
	ret := _m.ctrl.Call(_m, "SetSpaceIsolationSegment", orgName, spaceName, s)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockmanagerRecorder) SetSpaceIsolationSegment(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetSpaceIsolationSegment", arg0, arg1, arg2)
}
