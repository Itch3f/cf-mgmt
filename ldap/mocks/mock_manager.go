// Automatically generated by MockGen. DO NOT EDIT!
// Source: types.go

package mock_ldap

import (
	ldap "github.com/go-ldap/ldap"
	gomock "github.com/golang/mock/gomock"
	l "github.com/pivotalservices/cf-mgmt/ldap"
)

// Mock of Manager interface
type MockManager struct {
	ctrl     *gomock.Controller
	recorder *_MockManagerRecorder
}

// Recorder for MockManager (not exported)
type _MockManagerRecorder struct {
	mock *MockManager
}

func NewMockManager(ctrl *gomock.Controller) *MockManager {
	mock := &MockManager{ctrl: ctrl}
	mock.recorder = &_MockManagerRecorder{mock}
	return mock
}

func (_m *MockManager) EXPECT() *_MockManagerRecorder {
	return _m.recorder
}

func (_m *MockManager) GetUserIDs(config *l.Config, groupName string) ([]l.User, error) {
	ret := _m.ctrl.Call(_m, "GetUserIDs", config, groupName)
	ret0, _ := ret[0].([]l.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockManagerRecorder) GetUserIDs(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetUserIDs", arg0, arg1)
}

func (_m *MockManager) GetUser(config *l.Config, UserID string) (*l.User, error) {
	ret := _m.ctrl.Call(_m, "GetUser", config, UserID)
	ret0, _ := ret[0].(*l.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockManagerRecorder) GetUser(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetUser", arg0, arg1)
}

func (_m *MockManager) GetConfig(configDir string, ldapBindPassword string) (*l.Config, error) {
	ret := _m.ctrl.Call(_m, "GetConfig", configDir, ldapBindPassword)
	ret0, _ := ret[0].(*l.Config)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockManagerRecorder) GetConfig(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetConfig", arg0, arg1)
}

func (_m *MockManager) GetLdapUser(config *l.Config, UserDN string, UserSearchBase string) (*l.User, error) {
	ret := _m.ctrl.Call(_m, "GetLdapUser", config, UserDN, UserSearchBase)
	ret0, _ := ret[0].(*l.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockManagerRecorder) GetLdapUser(arg0, arg1, arg2 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetLdapUser", arg0, arg1, arg2)
}

func (_m *MockManager) LdapConnection(config *l.Config) (*ldap.Conn, error) {
	ret := _m.ctrl.Call(_m, "LdapConnection", config)
	ret0, _ := ret[0].(*ldap.Conn)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockManagerRecorder) LdapConnection(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "LdapConnection", arg0)
}
